AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  receipt-extractor-ws  

Parameters:
  UserPoolId:
    Type: String
    Description: Authorizer UserPoolId
  AppClientId:
    Type: String
    Description: Authorizer AppClientId
  NotificationTableName:
    Type: String
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_-]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

Resources:
  ReceiptExtractorWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ReceiptExtractorWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  Auth:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      Name: Websocket-Authorizer
      ApiId: !Ref ReceiptExtractorWebSocket
      AuthorizerType: REQUEST
      AuthorizerUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthFunction.Arn}/invocations
      IdentitySource:
        - "route.request.querystring.idToken"
  
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: authorizer/
      Handler: app.lambdaHandler
      MemorySize: 256
      Runtime: nodejs18.x
      Architectures:
        - x86_64 
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          APP_CLIENT_ID: !Ref AppClientId
    Metadata: # Manage esbuild properties
        BuildMethod: esbuild
        BuildProperties:
          Minify: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints: 
          - app.ts

  AuthorizerFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ReceiptExtractorWebSocket
      - AuthFunction   
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AuthFunction
      Principal: apigateway.amazonaws.com

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ReceiptExtractorWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      AuthorizerId: !Ref Auth
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ReceiptExtractorWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ReceiptExtractorWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ReceiptExtractorWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations  
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref ReceiptExtractorWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref ReceiptExtractorWebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "connectionId"
        AttributeType: "S"
      - AttributeName: "userId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "connectionId"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: UserIdIndex
          KeySchema:
          - AttributeName: userId
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref NotificationTableName
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: !Ref NotificationTableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref NotificationTableName
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ReceiptExtractorWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: !Ref NotificationTableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref NotificationTableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ReceiptExtractorWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join [ '', [ 'wss://', !Ref ReceiptExtractorWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]
