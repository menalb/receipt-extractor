@using Blazorise.Charts
@using Model;
@using System.Globalization;

<div>
    <BarChart @ref="lineChart"
              TItem="ReceiptTotal"
              Options="lineChartOptions"
              Clicked="@OnClicked" />
</div>

@code {
    [Parameter]
    public IEnumerable<ReceiptListItem> Receipts { get; set; } = new List<ReceiptListItem>();
    BarChart<ReceiptTotal> lineChart = new BarChart<ReceiptTotal>();

    List<ReceiptTotal> Totals = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await HandleRedraw();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await HandleRedraw();
    }

    async Task HandleRedraw()
    {
        UpdateTotals();
        if (lineChart.Data != null)
        {
            await lineChart.SetData(0, Totals);
        }
        else
        {
            await lineChart.AddDataSet(GetLineChartDataset());
        }
    }

    BarChartOptions lineChartOptions = new()
        {
            Parsing = new ChartParsing
            {
                XAxisKey = "dayLabel",
                YAxisKey = "total",
            },
            MaintainAspectRatio = true,
            Responsive = true,
            Plugins = new ChartPlugins { Legend = new ChartLegend { Display = false } }
        };


    public void UpdateTotals()
    {
        Totals = Receipts
        .GroupBy(g => g.day.Date)
        .Select(g => new
        {
            d = g.Key,
            t = g.Sum(x => x.total)
        })
        .OrderBy(x => x.d)
        .Select(t => new ReceiptTotal(t.d.ToString("MMM dd"), t.t, t.d))
        .ToList();
    }

    Task OnClicked(ChartMouseEventArgs e)
    {
        var model = e.Model as BarChartModel;

        if (model is not null)
        {
            var selected = Totals.FirstOrDefault(t => t.dayLabel == model.DatasetLabel);

            Console.WriteLine(selected?.day.ToLongDateString() ?? "");
        }
        return Task.CompletedTask;
    }

    private BarChartDataset<ReceiptTotal> GetLineChartDataset()
    {
        return new BarChartDataset<ReceiptTotal>
            {
                Data = Totals,
                BackgroundColor = backgroundColors,
                BorderColor = borderColors
            };
    }

    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 159, 64, 1f) };
    public record ReceiptTotal(string dayLabel, decimal total, DateTime day);
}
